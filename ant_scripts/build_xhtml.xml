<!-- Ant build file for Swift Mailer Documentation -->
<project name="Swift Mailer Documentation" default="dita2xhtml">
  
  <!-- Config settings -->
  <property environment="env" />
  <property name="path" value="." />
  <property name="base" value="${path}/.." />
  <property name="css.dir" value="${base}/css" />
  <property name="xsl.dir" value="${base}/xsl" />
  <property name="build.dir" value="${base}/buildfiles" />
  <property name="build.xhtml.dir" value="${build.dir}/xhtml" />  
  <property name="output.dir" value="${base}/output/xhtml" />
  <property name="dita.temp.dir" value="${base}/temp" />
  <property name="clean.temp" value="yes" />
  <property name="dita.dir" value="${env.DITA_DIR}" />
  <property name="dita.lib.dir" value="${dita.dir}/lib" />
  <property name="template.dir" value="${base}/template" />
  <property name="args.input" value="${template.dir}/documentation.ditamap" />
  <property name="args.copycss" value="yes" />
  <property name="args.css" value="${css.dir}/documentation.css" />
  <property name="args.csspath" value="css" />
  <property name="args.xsl" value="${xsl.dir}/dita2xhtml.xsl" />
  <property name="args.xhtmltoc" value="toc" />
  <property name="transtype" value="xhtml" />
  <property name="validate" value="yes" />
  
  <!-- Path reference for dita-ot jars -->
  <path id="path.jars">
    <fileset dir="${dita.lib.dir}">
      <include name="**/*.jar" />                                                  
    </fileset>
  </path>
  
  <!-- Process the XHTML output -->
  <target name="dita2xhtml">
    <property name="classpath" refid="path.jars" />
    <java jar="${dita.lib.dir}/dost.jar" classpathref="path.jars" fork="true">
      <env key="CLASSPATH" value="${classpath}" />
      <arg value="/i:${args.input}" />
      <arg value="/transtype:${transtype}" />
      <arg value="/ditadir:${dita.dir}" />
      <arg value="/outdir:${output.dir}" />
      <arg value="/tempdir:${dita.temp.dir}" />
      <arg value="/validate:${validate}" />
      <arg value="/cleantemp:${clean.temp}" />
      <arg value="/copycss:${args.copycss}" />
      <arg value="/css:${args.css}" />
      <arg value="/csspath:${args.csspath}" />
<!--      <arg value="/xsl:${args.xsl}" /> -->
      <arg value="/xhtmltoc:${args.xhtmltoc}" />
    </java>
    <copy todir="${output.dir}">
      <fileset dir="${build.xhtml.dir}" />
    </copy>
  </target>
  
</project>
