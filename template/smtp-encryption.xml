<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
  "../dtd/task.dtd">
<task id="smtp-encryption" xml:lang="en-us">
  <title>Encrypted SMTP</title>
  <shortdesc>
    You can use SSL or TLS encryption with the SMTP Transport by specifying it
    as a parameter or with a method call.
  </shortdesc>
  <prolog>
    <author type="creator">Chris Corbyn</author>
    <copyright>
      <copyryear year="2008"/>
      <copyrholder>Chris Corbyn</copyrholder>
    </copyright>
    <critdates>
      <created date="2008-December-26"/>
      <revised modified="2008-December-26"/>
    </critdates>
    <metadata>
      <keywords>
        <keyword>swift mailer</keyword>
        <keyword>php</keyword>
        <keyword>sending</keyword>
        <keyword>message</keyword>
        <keyword>transport</keyword>
        <keyword>smtp</keyword>
        <keyword>encryption</keyword>
        <keyword>ssl</keyword>
        <keyword>tls</keyword>
        <indexterm>
          transports
          <indexterm>SMTP</indexterm>
        </indexterm>
        <indexterm>
          SMTP transport
          <indexterm>with encryption</indexterm>
        </indexterm>
      </keywords>
    </metadata>
  </prolog>
  <taskbody>
    <context>
      <p>
        To use encryption with the SMTP Transport:
      </p>
    </context>
    <steps-unordered>
      <step>
        <cmd>
          Pass the encryption setting as a third parameter to
          <codeph>Swift_SmtpTransport::newInstance()</codeph>; or
        </cmd>
      </step>
      <step>
        <cmd>
          Call the <codeph>setEncryption()</codeph> method on the Transport.
        </cmd>
      </step>
    </steps-unordered>
    
    <result>
      <p>
        A connection to the SMTP server will be established upon the first call to
        <codeph>send()</codeph> or <codeph>batchSend()</codeph>.  The connection will
        be initiated with the correct encryption settings.
      </p>
      <note>
        For SSL or TLS encryption to work your PHP installation must have appropriate OpenSSL
        transports wrappers.  You can check if "tls" and/or "ssl" are present in your
        PHP installation by using the PHP function <codeph>stream_get_transports()</codeph>
      </note>
    </result>
    
    <example id="setencryption">
<codeblock  outputclass="kodify php"><![CDATA[
<?php

require_once 'lib/swift_required.php';

//Create the Transport
$transport = Swift_SmtpTransport::newInstance('smtp.example.org', 587, 'ssl');

//Create the Mailer using your created Transport
$mailer = Swift_Mailer::newInstance($transport);

/*
It's also possible to use multiple method calls

$transport = Swift_SmtpTransport::newInstance()
  ->setHost('smtp.example.org')
  ->setPort(587)
  ->setEncryption('ssl')
  ;
*/

]]></codeblock>
    </example>
    
  </taskbody>
</task>
