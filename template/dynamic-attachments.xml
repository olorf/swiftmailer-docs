<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
  "../dtd/task.dtd">
<task id="attaching-dynamic" xml:lang="en-us">
  <title>Attaching Dynamic Content</title>
  <shortdesc>
    Files that are generated at runtime, such as PDF documents or images created via
    GD can be attached directly to a message without writing them out to disk.  Use the
    standard Swift_Attachment::newInstance() method.
  </shortdesc>
  <prolog>
    <author type="creator">Chris Corbyn</author>
    <copyright>
      <copyryear year="2008"/>
      <copyrholder>Chris Corbyn</copyrholder>
    </copyright>
    <critdates>
      <created date="2008-December-26"/>
      <revised modified="2008-December-26"/>
    </critdates>
    <metadata>
      <keywords>
        <keyword>swift mailer</keyword>
        <keyword>php</keyword>
        <keyword>message</keyword>
        <keyword>attachments</keyword>
        <indexterm>
          messages
          <indexterm>attachments</indexterm>
        </indexterm>
        <indexterm>
          attachments
          <indexterm>from dynamic content</indexterm>
        </indexterm>
      </keywords>
    </metadata>
  </prolog>
  <taskbody>
    <context>
      <p>
        To attach dynamically created content:
      </p>
    </context>
    <steps>
      <step>
        <cmd>
          Create your content as you normally would.
        </cmd>
      </step>
      <step>
        <cmd>
          Create an attachment with <codeph>Swift_Attachment::newInstance()</codeph>, specifying the source
          data of your content along with a name and the content-type.
        </cmd>
      </step>
      <step>
        <cmd>
          Add the attachment to the message with <codeph>attach()</codeph>.
        </cmd>
      </step>
    </steps>
    
    <result>
      <p>
        The attachment will be presented to the recipient as a downloadable file
        with the filename and content-type you specify.
      </p>
      <note>
        If you would usually write the file to disk anyway you should just attach it with
        <codeph>Swift_Attachment::fromPath()</codeph> since this will use less memory.
      </note>
    </result>
    
    <example id="attach_dynamic">
<codeblock><![CDATA[
//Create your file contents in the normal way, but don't write them to disk
$data = create_my_pdf_data();

//Create the attachment with your data
$attachment = Swift_Attachment::newInstance($data, 'my-file.pdf', 'application/pdf');  

//Attach it to the message
$message->attach($attachment);


//You can alternatively use method chaining to build the attachment
$attachment = Swift_Attachment::newInstance()
  ->setFilename('my-file.pdf')
  ->setContentType('application/pdf')
  ->setBody($data)
  ;

]]></codeblock>
    </example>
    
  </taskbody>
</task>
