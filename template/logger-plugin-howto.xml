<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
  "../dtd/task.dtd">
<task id="logger-ref" xml:lang="en-us">
  <title>Using the Logger Plugin</title>
  <shortdesc>
    The Logger Plugin &#8211; like all plugins &#8211; is added with the Mailer
    class' <codeph>registerPlugin()</codeph> method.  It accepts an instance of
    <codeph>Swift_Plugins_Logger</codeph> in its constructor.
  </shortdesc>
  <prolog>
    <author type="creator">Chris Corbyn</author>
    <copyright>
      <copyryear year="2009"/>
      <copyrholder>Chris Corbyn</copyrholder>
    </copyright>
    <critdates>
      <created date="2009-February-16"/>
      <revised modified="2009-February-16"/>
    </critdates>
    <metadata>
      <keywords>
        <keyword>swift mailer</keyword>
        <keyword>php</keyword>
        <keyword>plugins</keyword>
        <keyword>logger plugin</keyword>
        <indexterm>
          plugins
          <indexterm>logger plugin</indexterm>
        </indexterm>
      </keywords>
    </metadata>
  </prolog>
  <taskbody>
    <context>
      <p>
        To use the Logger plugin:
      </p>
    </context>
    <steps>
      <step>
        <cmd>
          Create an instance of the Mailer using any Transport you choose.
        </cmd>
      </step>
      
      <step>
        <cmd>
          Create an instance of the a Logger implementation of <codeph>Swift_Plugins_Logger</codeph>.
        </cmd>
      </step>
      
      <step>
        <cmd>
          Create an instance of the <codeph>Swift_Plugins_LoggerPlugin</codeph>
          class, passing the created Logger instance to its constructor.
        </cmd>
      </step>
      
      <step>
        <cmd>
          Register the plugin using the Mailer's <codeph>registerPlugin()</codeph> method.
        </cmd>
      </step>
      
      <step>
        <cmd>
          Continue using Swift Mailer to send messages as normal.
        </cmd>
      </step>
      
      <step>
        <cmd>
          Dump the contents of the log with the logger's <codeph>dump()</codeph> method.
        </cmd>
      </step>
    </steps>
    
    <result>
      <p>
        When Swift Mailer sends messages it will keep a log of all the interactions with
        the underlying Transport being used.  Depending upon the Logger that has been
        used the behaviour will differ, but all implementations offer a way to get the
        contents of the log.
      </p>
    </result>
    
    <example id="quickexample">
<codeblock><![CDATA[
<?php

require_once 'lib/swift_required.php';

//Create the Mailer using any Transport
$mailer = Swift_Mailer::newInstance(
  Swift_SmtpTransport::newInstance('smtp.example.org', 25)
);

//To use the ArrayLogger
$logger = new Swift_Plugins_Loggers_ArrayLogger();
$mailer->registerPlugin(new Swift_Plugins_LoggerPlugin($logger));

//Or to use the Echo Logger
$logger = new Swift_Plugins_Loggers_EchoLogger();
$mailer->registerPlugin($logger);

//Continue sending as normal
for ($lotsOfRecipients as $recipient) {
  ...
  
  $mailer->send( ... );
}

// Dump the log contents
// NOTE: The EchoLogger dumps in realtime so dump() does nothing for it
echo $logger->dump();


]]></codeblock>
    </example>
    
  </taskbody>
</task>
