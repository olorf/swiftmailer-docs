<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
  "../dtd/concept.dtd">
<concept id="decorator-plugin" xml:lang="en-us">
  <title>Decorator Plugin</title>
  <shortdesc>
    Often there's a need to send the same message to multiple recipients, but with tiny
    variations such as the recipient's name being used inside the message body.  The
    Decorator plugin aims to provide a solution for allowing these small differences.
  </shortdesc>
  <prolog>
    <author type="creator">Chris Corbyn</author>
    <copyright>
      <copyryear year="2009"/>
      <copyrholder>Chris Corbyn</copyrholder>
    </copyright>
    <critdates>
      <created date="2009-March-22"/>
      <revised modified="2009-March-22"/>
    </critdates>
    <metadata>
      <keywords>
        <keyword>swift mailer</keyword>
        <keyword>php</keyword>
        <keyword>plugins</keyword>
        <keyword>decorator plugin</keyword>
        <indexterm>
          plugins
          <indexterm>decorator plugin</indexterm>
        </indexterm>
      </keywords>
    </metadata>
  </prolog>
  <conbody>
    <p>
      The decorator plugin works by intercepting the sending process of Swift Mailer,
      reading the email address in the To: field and then looking up a set of replacements
      for a template.
    </p>
    
    <p>
      While the use of this plugin is simple, it is probably the most commonly misunderstood
      plugin due to the way in which it works.  The typical mistake users make is to try
      registering the plugin multiple times (once for each recipient) &#8211; inside a loop
      for example.  This is incorrect.
    </p>
    
    <p>
      The Decorator plugin should be registered just once, but containing the list of all
      recipients prior to sending.  It will use this list of recipients to find the required
      replacements during sending.
    </p>
    
  </conbody>
</concept>
