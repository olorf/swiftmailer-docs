<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
  "../../../../dtd/concept.dtd">
<concept id="failover" xml:lang="en-us">
  <title>Failover Transport</title>
  <shortdesc>For providing fallback to other Transports when sending messages.</shortdesc>
  <prolog>
    <author type="creator">Chris Corbyn</author>
    <copyright>
      <copyryear year="2008"/>
      <copyrholder>Chris Corbyn</copyrholder>
    </copyright>
    <critdates>
      <created date="2008-December-24"/>
      <revised modified="2008-December-24"/>
    </critdates>
    <metadata>
      <keywords>
        <keyword>swift mailer</keyword>
        <keyword>php</keyword>
        <keyword>transports</keyword>
        <keyword>swift_failovertransport</keyword>
        <keyword>failover</keyword>
        <keyword>high availability</keyword>
        <indexterm>
          transports
          <indexterm>failover</indexterm>
        </indexterm>
      </keywords>
    </metadata>
  </prolog>
  <conbody>
    <section id="about">
      <title>About the Failover Transport</title>
      <p>
        The Failover Transport, <codeph>Swift_FailoverTransport</codeph> does not actually send
        Messages itself.  It is used in conjunction with any of the other Transports
        to provide a high-availability scheme in the event that one server fails to
        respond.
      </p>
      <p>
        It is not likely that the average Swift Mailer user will find a need for this
        Transport, but companies that have access to several SMTP servers may opt to make
        use of this Transport so that failures/downtime is handled gracefully.
      </p>
      <p>
        Unlike the Load-Balanced Transport, which is remarkably similar, the Failover
        Transport does not distribute messages across all of the Transports it knows
        about &#8211; it only switches to an alternative Transport when the one it's
        currently using fails.
      </p>
    </section>
  </conbody>
</concept>
