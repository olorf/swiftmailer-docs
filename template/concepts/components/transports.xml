<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
  "../../../dtd/concept.dtd">
<concept id="transports" xml:lang="en-us">
  <title>Transports</title>
  <shortdesc>
    Transports are the classes in Swift Mailer that are responsible for communicating
    with a service in order to deliver a Message. There are several types of Transport
    in Swift Mailer, all of which implement the Swift_Transport interface and offer
    underlying start(), stop() and send() methods.
  </shortdesc>
  <prolog>
    <author type="creator">Chris Corbyn</author>
    <copyright>
      <copyryear year="2008"/>
      <copyrholder>Chris Corbyn</copyrholder>
    </copyright>
    <critdates>
      <created date="2008-December-24"/>
      <revised modified="2008-December-24"/>
    </critdates>
    <metadata>
      <keywords>
        <keyword>swift mailer</keyword>
        <keyword>php</keyword>
        <keyword>transports</keyword>
        <keyword>smtp</keyword>
        <keyword>sendmail</keyword>
        <keyword>mail</keyword>
        <keyword>load balanced</keyword>
        <keyword>failover</keyword>
        <keyword>mta</keyword>
        <keyword>mail transfer agent</keyword>
        <indexterm>
          transports
          <indexterm>SMTP</indexterm>
          <indexterm>Sendmail</indexterm>
          <indexterm>Mail</indexterm>
          <indexterm>LoadBalanced</indexterm>
          <indexterm>Failover</indexterm>
        </indexterm>
      </keywords>
    </metadata>
  </prolog>
  <conbody>
    <section id="transport_basics">
    
      <p>
        Typically you will not need to know how a Transport works under-the-surface, you will only need
        to know how to create an instance of one, and which one to use for your environment.
      </p>
    </section>
    
    <section>
      <simpletable>
      
        <sthead>
          <stentry>Class</stentry>
          <stentry>Features</stentry>
          <stentry>Pros/cons</stentry>
        </sthead>
      
        <strow>
         <stentry><codeph>Swift_SmtpTransport</codeph></stentry>
         <stentry>Sends messages over SMTP; Supports Authentication; Supports Encryption</stentry>
         <stentry>Very portable; Pleasingly predictable results; Provides good feedback</stentry>
        </strow>
      
        <strow>
         <stentry><codeph>Swift_SendmailTransport</codeph></stentry>
         <stentry>Communicates with a locally installed <cmdname>sendmail</cmdname> executable (Linux/UNIX)</stentry>
         <stentry>Quick time-to-run;  Provides less-accurate feedback than SMTP; Requires <cmdname>sendmail</cmdname> installation</stentry>
        </strow>
      
        <strow>
         <stentry><codeph>Swift_MailTransport</codeph></stentry>
         <stentry>Uses PHP's built-in <codeph>mail()</codeph> function</stentry>
         <stentry>Very portable; Potentially unpredictable results; Provides extremely weak feedback</stentry>
        </strow>
      
        <strow>
         <stentry><codeph>Swift_LoadBalancedTransport</codeph></stentry>
         <stentry>Cycles through a collection of the other Transports to manage load-reduction</stentry>
         <stentry>Provides graceful fallback if one Transport fails (e.g. an SMTP server is down); Keeps the load on remote services down by spreading the work</stentry>
        </strow>
      
        <strow>
         <stentry><codeph>Swift_FailoverTransport</codeph></stentry>
         <stentry>Works in conjunction with a collection of the other Transports to provide high-availability</stentry>
         <stentry>Provides graceful fallback if one Transport fails (e.g. an SMTP server is down)</stentry>
        </strow>
      
      </simpletable>
      
    </section>
    
  </conbody>
</concept>
